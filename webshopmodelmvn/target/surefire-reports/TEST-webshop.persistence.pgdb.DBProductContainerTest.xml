<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="webshop.persistence.pgdb.DBProductContainerTest" time="0.003" tests="14" errors="5" skipped="0" failures="4">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="sun.boot.library.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/amd64"/>
    <property name="java.vm.version" value="25.151-b12"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="/home/hom/sebi/sen1/trunk/45_assessment/examprojects/webshop2015b/code/webshopmodelmvn"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=":"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.country" value="US"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value="unknown"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="/home/hom/sebi/sen1/trunk/45_assessment/examprojects/webshop2015b/code/webshopmodelmvn"/>
    <property name="java.runtime.version" value="1.8.0_151-b12"/>
    <property name="java.awt.graphicsenv" value="sun.awt.X11GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="/tmp"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="os.name" value="Linux"/>
    <property name="classworlds.conf" value="/usr/share/maven/bin/m2.conf"/>
    <property name="sun.jnu.encoding" value="UTF-8"/>
    <property name="java.library.path" value="/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="4.10.0-38-generic"/>
    <property name="user.home" value="/home/hom"/>
    <property name="user.timezone" value="Europe/Amsterdam"/>
    <property name="java.awt.printerjob" value="sun.print.PSPrinterJob"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="user.name" value="hom"/>
    <property name="java.class.path" value="/usr/share/maven/boot/plexus-classworlds-2.x.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="/usr/lib/jvm/java-8-oracle/jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher install"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.X11.XToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_151"/>
    <property name="java.ext.dirs" value="/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext"/>
    <property name="securerandom.source" value="file:/dev/./urandom"/>
    <property name="sun.boot.class.path" value="/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="/usr/share/maven"/>
    <property name="file.separator" value="/"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.desktop" value="gnome"/>
    <property name="sun.cpu.isalist" value=""/>
  </properties>
  <testcase name="testTakeAll" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0">
    <failure message="expected same:&lt;Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}&gt; was not:&lt;Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: expected same:<Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}> was not:<Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotSame(Assert.java:828)
	at org.junit.Assert.assertSame(Assert.java:771)
	at org.junit.Assert.assertSame(Assert.java:782)
	at webshop.persistence.pgdb.DBProductContainerTest.testTakeAll(DBProductContainerTest.java:256)
]]></failure>
    <system-out><![CDATA[script = -- this table servers for tests only.

drop table if exists test_inventory cascade;
drop table if exists test_cart cascade;
drop table if exists test_invoice cascade;
create table test_inventory  (
    product_id bigint references products(product_id) primary key,
    quantity int NOT NULL CHECK (quantity >= 0) default 0,
    date_creation timestamp default now()::timestamp,
    date_update timestamp default now()::timestamp,
    owner_session bigint not null default 0
)  without oids;
alter table test_inventory owner to exam;

insert into test_inventory 
       (product_id, quantity, date_creation, date_update,owner_session)
       values
       (1,0,default,default,0),
       (2,5,default,default,0),
       (3,100,default,default,0);

create table test_cart (
    product_id bigint references products(product_id),
    quantity int NOT NULL CHECK (quantity >= 0) default 0,
    date_creation timestamp default now()::timestamp,
    date_update timestamp default now()::timestamp,
    owner_session bigint not null default 0,
    primary key(product_id, owner_session)
);
alter table test_inventory owner to exam;
alter table test_cart owner to exam;

-- this table servers for tests only.

drop table if exists test_inventory cascade;
drop table if exists test_cart cascade;
drop table if exists test_invoice cascade;
create table test_inventory  (
    product_id bigint references products(product_id) primary key,
    quantity int NOT NULL CHECK (quantity >= 0) default 0,
    date_creation timestamp default now()::timestamp,
    date_update timestamp default now()::timestamp,
    owner_session bigint not null default 0
)  without oids;
alter table test_inventory owner to exam;

insert into test_inventory 
       (product_id, quantity, date_creation, date_update,owner_session)
       values
       (1,0,default,default,0),
       (2,5,default,default,0),
       (3,100,default,default,0);

create table test_cart (
    product_id bigint references products(product_id),
    quantity int NOT NULL CHECK (quantity >= 0) default 0,
    date_creation timestamp default now()::timestamp,
    date_update timestamp default now()::timestamp,
    owner_session bigint not null default 0,
    primary key(product_id, owner_session)
);
alter table test_inventory owner to exam;
alter table test_cart owner to exam;
;

pst = select * from products where 'TRUE' order by product_id
 found p = Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}
 found p = Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
 found p = Product{id=3, description=Battleship, vatLevel=HIGH, price=2000}
 found p = Product{id=4, description=Crisps, vatLevel=LOW, price=100}
 found p = Product{id=5, description=Coca Cola, vatLevel=LOW, price=250}
 found p = Product{id=6, description=Kingsman: The secret Service, vatLevel=HIGH, price=2500}
 found p = Product{id=7, description=Popcorn, vatLevel=LOW, price=120}
 found p = Product{id=8, description=Twix, vatLevel=LOW, price=90}
 found p = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
testTakeAll
>>>p = Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
find = Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
get contents
pst = select * from test_inventory join products using(product_id)  where  owner_session=0 order by product_id
pst = select quantity from test_inventory where product_id=2 and owner_session=0
find = Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
find = Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
find = Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
takeall qtyToTake = 7
find = Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
takeAll result = pq= 7 times Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
>>>p2 = Product{id=2, description=Inferno, vatLevel=HIGH, price=3000}
]]></system-out>
  </testcase>
  <testcase name="testItemCount" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0"/>
  <testcase name="testMerge_Product_int" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0.001">
    <error message="doInsert failed with query &quot;insert into test_inventory (product_id,owner_session) select ?,? where not exists (select 1 from test_inventory where product_id =? and owner_session=?)&quot; with args [0, 0, 0, 0]" type="webshop.persistence.PersistenceException">webshop.persistence.PersistenceException: doInsert failed with query "insert into test_inventory (product_id,owner_session) select ?,? where not exists (select 1 from test_inventory where product_id =? and owner_session=?)" with args [0, 0, 0, 0]
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.DBProductContainerTest.testMerge_Product_int(DBProductContainerTest.java:170)
</error>
    <system-out><![CDATA[find = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
get contents
pst = select * from test_inventory join products using(product_id)  where  owner_session=0 order by product_id
]]></system-out>
    <system-err><![CDATA[Nov 08, 2017 4:00:57 PM webshop.persistence.pgdb.QueryHelper doInsert
SEVERE: doInsert failed with query "insert into test_inventory (product_id,owner_session) select ?,? where not exists (select 1 from test_inventory where product_id =? and owner_session=?)" with args [0, 0, 0, 0]
org.postgresql.util.PSQLException: ERROR: insert or update on table "test_inventory" violates foreign key constraint "test_inventory_product_id_fkey"
  Detail: Key (product_id)=(0) is not present in table "products".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.DBProductContainerTest.testMerge_Product_int(DBProductContainerTest.java:170)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)

]]></system-err>
  </testcase>
  <testcase name="testCount" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0">
    <error message="doInsert failed with query &quot;insert into test_inventory (product_id,owner_session) select ?,? where not exists (select 1 from test_inventory where product_id =? and owner_session=?)&quot; with args [0, 0, 0, 0]" type="webshop.persistence.PersistenceException">webshop.persistence.PersistenceException: doInsert failed with query "insert into test_inventory (product_id,owner_session) select ?,? where not exists (select 1 from test_inventory where product_id =? and owner_session=?)" with args [0, 0, 0, 0]
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.DBProductContainerTest.testCount(DBProductContainerTest.java:93)
</error>
    <system-out><![CDATA[find = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
get contents
pst = select * from test_inventory join products using(product_id)  where  owner_session=0 order by product_id
]]></system-out>
    <system-err><![CDATA[Nov 08, 2017 4:00:57 PM webshop.persistence.pgdb.QueryHelper doInsert
SEVERE: doInsert failed with query "insert into test_inventory (product_id,owner_session) select ?,? where not exists (select 1 from test_inventory where product_id =? and owner_session=?)" with args [0, 0, 0, 0]
org.postgresql.util.PSQLException: ERROR: insert or update on table "test_inventory" violates foreign key constraint "test_inventory_product_id_fkey"
  Detail: Key (product_id)=(0) is not present in table "products".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.DBProductContainerTest.testCount(DBProductContainerTest.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)

]]></system-err>
  </testcase>
  <testcase name="testPurge" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0"/>
  <testcase name="testFind" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0">
    <failure message="Not found" type="java.lang.AssertionError">java.lang.AssertionError: Not found
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertNotNull(Assert.java:712)
	at webshop.persistence.pgdb.DBProductContainerTest.testFind(DBProductContainerTest.java:112)
</failure>
    <system-out><![CDATA[find = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
get contents
pst = select * from test_inventory join products using(product_id)  where  owner_session=0 order by product_id
find = null
]]></system-out>
  </testcase>
  <testcase name="testTake" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0.001">
    <failure message="checks and balances 2 expected same:&lt;Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}&gt; was not:&lt;Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}&gt;" type="java.lang.AssertionError"><![CDATA[java.lang.AssertionError: checks and balances 2 expected same:<Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}> was not:<Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}>
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.failNotSame(Assert.java:828)
	at org.junit.Assert.assertSame(Assert.java:771)
	at webshop.persistence.pgdb.DBProductContainerTest.testTake(DBProductContainerTest.java:231)
]]></failure>
    <system-out><![CDATA[test PGDBProductContainer.take
>>>p2 = Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}
pst = select quantity from test_inventory where product_id=1 and owner_session=0
find = Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}
get contents
pst = select * from test_inventory join products using(product_id)  where  owner_session=0 order by product_id
find = Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}
find = Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}
find = Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}
>>>px = Product{id=1, description=The Davinci code, vatLevel=HIGH, price=2500}
]]></system-out>
  </testcase>
  <testcase name="testGetTableName" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0"/>
  <testcase name="testContains" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0">
    <failure message="expect it to be contained" type="java.lang.AssertionError">java.lang.AssertionError: expect it to be contained
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at webshop.persistence.pgdb.DBProductContainerTest.testContains(DBProductContainerTest.java:83)
</failure>
    <system-out><![CDATA[p from mapper = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
find = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
get contents
pst = select * from test_inventory join products using(product_id)  where  owner_session=0 order by product_id
]]></system-out>
  </testcase>
  <testcase name="testTransferTo_Greedy" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0"/>
  <testcase name="testGetContents" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0">
    <error message="doInsert failed with query &quot;insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)&quot; with args [0, 1, 0, 1]" type="webshop.persistence.PersistenceException">webshop.persistence.PersistenceException: doInsert failed with query "insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)" with args [0, 1, 0, 1]
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:178)
	at webshop.persistence.pgdb.DBProductContainerTest.testGetContents(DBProductContainerTest.java:133)
</error>
    <system-err><![CDATA[Nov 08, 2017 4:00:57 PM webshop.persistence.pgdb.QueryHelper doInsert
SEVERE: doInsert failed with query "insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)" with args [0, 1, 0, 1]
org.postgresql.util.PSQLException: ERROR: insert or update on table "test_cart" violates foreign key constraint "test_cart_product_id_fkey"
  Detail: Key (product_id)=(0) is not present in table "products".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:178)
	at webshop.persistence.pgdb.DBProductContainerTest.testGetContents(DBProductContainerTest.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)

]]></system-err>
  </testcase>
  <testcase name="testDrainTo" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0"/>
  <testcase name="testTransferTo" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0">
    <error message="doInsert failed with query &quot;insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)&quot; with args [0, 2, 0, 2]" type="webshop.persistence.PersistenceException">webshop.persistence.PersistenceException: doInsert failed with query "insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)" with args [0, 2, 0, 2]
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.DBProductContainerTest.testTransferTo(DBProductContainerTest.java:271)
</error>
    <system-out><![CDATA[testTransferTo
find = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
get contents
pst = select * from test_cart join products using(product_id)  where  owner_session=2 order by product_id
find = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
get contents
pst = select * from test_cart join products using(product_id)  where  owner_session=1 order by product_id
]]></system-out>
    <system-err><![CDATA[Nov 08, 2017 4:00:57 PM webshop.persistence.pgdb.QueryHelper doInsert
SEVERE: doInsert failed with query "insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)" with args [0, 2, 0, 2]
org.postgresql.util.PSQLException: ERROR: insert or update on table "test_cart" violates foreign key constraint "test_cart_product_id_fkey"
  Detail: Key (product_id)=(0) is not present in table "products".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.DBProductContainerTest.testTransferTo(DBProductContainerTest.java:271)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)

]]></system-err>
  </testcase>
  <testcase name="testMerge_ProductQuantity" classname="webshop.persistence.pgdb.DBProductContainerTest" time="0.001">
    <error message="doInsert failed with query &quot;insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)&quot; with args [0, 2, 0, 2]" type="webshop.persistence.PersistenceException">webshop.persistence.PersistenceException: doInsert failed with query "insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)" with args [0, 2, 0, 2]
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:178)
	at webshop.persistence.pgdb.DBProductContainerTest.testMerge_ProductQuantity(DBProductContainerTest.java:185)
</error>
    <system-out><![CDATA[find = Product{id=0, description=Warsteiner, vatLevel=HIGH, price=98}
get contents
pst = select * from test_cart join products using(product_id)  where  owner_session=2 order by product_id
]]></system-out>
    <system-err><![CDATA[Nov 08, 2017 4:00:57 PM webshop.persistence.pgdb.QueryHelper doInsert
SEVERE: doInsert failed with query "insert into test_cart (product_id,owner_session) select ?,? where not exists (select 1 from test_cart where product_id =? and owner_session=?)" with args [0, 2, 0, 2]
org.postgresql.util.PSQLException: ERROR: insert or update on table "test_cart" violates foreign key constraint "test_cart_product_id_fkey"
  Detail: Key (product_id)=(0) is not present in table "products".
	at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2477)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:2190)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:300)
	at org.postgresql.jdbc.PgStatement.executeInternal(PgStatement.java:428)
	at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:354)
	at org.postgresql.jdbc.PgPreparedStatement.executeWithFlags(PgPreparedStatement.java:169)
	at org.postgresql.jdbc.PgPreparedStatement.executeUpdate(PgPreparedStatement.java:136)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:231)
	at webshop.persistence.pgdb.QueryHelper.doInsert(QueryHelper.java:209)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:156)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:113)
	at webshop.persistence.pgdb.PGDBProductContainer.merge(PGDBProductContainer.java:178)
	at webshop.persistence.pgdb.DBProductContainerTest.testMerge_ProductQuantity(DBProductContainerTest.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)

]]></system-err>
  </testcase>
</testsuite>